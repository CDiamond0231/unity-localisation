// This file is autogenerated in the Unity Editor
using System.Collections.Generic;
using UnityEngine;

#pragma warning disable 618

public static partial class LocIDs
{
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//                   Loc Docs Info                       
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	public static class LocDocsInfo
	{
		public const int TotalLocDocs = 1;

		/// <summary> Used as identifiers for Resource Names or Addressable keys. </summary>
		public static readonly string[] LocDocs = new string[TotalLocDocs]
		{
			"Loc_Strings",
		};

		#if UNITY_EDITOR
		/// <summary> Used during build to move Loc String CSV files over to the Resources folder, if not using Addressables. </summary>
		public static readonly string[] LocDocsPaths = new string[TotalLocDocs]
		{
			"Assets/External/Localisation/GameSpecific_Localisation/LocTables/Loc_Strings.csv",
		};
		#endif
	}

	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//                   Master Loc Ids                       
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	/// <summary> Empty String Value: Will show nothing </summary>
	public const int Empty_Loc_String = 0;
	/// <summary> No </summary>
	public const int Confirm_No = -1268621784;
	/// <summary> Yes </summary>
	public const int Confirm_Yes = -1542218950;
}


namespace Localisation
{
	public static class LocIdsHelper
	{
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//                    Definitions                         
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		public const int Loc_Strings_TotalLocIdsCount = 6;
		


		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//              Loc_Strings Row Ids                    
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		[System.Obsolete("Don't use this class. RowIDs can change at any time. Instead, use Localisation.LocID because the value will always be consistent.")]
		public enum Loc_Strings_RowIds
		{
			Empty_Loc_String,
			Confirm_No,
			Confirm_Yes,
		}


		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//              Loc_Strings Conversion                 
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		private static Dictionary<int, int> Loc_Strings_Get()
		{
			Dictionary<int, int> output = new Dictionary<int, int>(LocIdsHelper.Loc_Strings_TotalLocIdsCount);
			output.Add( LocIDs.Confirm_Yes, (int)Loc_Strings_RowIds.Confirm_Yes );
			output.Add( LocIDs.Confirm_No, (int)Loc_Strings_RowIds.Confirm_No );
			output.Add( LocIDs.Empty_Loc_String, (int)Loc_Strings_RowIds.Empty_Loc_String );
			return output;
		}


		public static readonly Dictionary<int, int> Loc_Strings_HashValueToRowId = Loc_Strings_Get();


		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//                  Hash To Rows Reference                
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		public static readonly Dictionary<string, int> CSVNameToRowsDictionaryIndex = new Dictionary<string, int>
		{
			{ "Loc_Strings", 0 },
		};


		public static readonly Dictionary<int, int>[] HashToRowsDictionaryReferences = new Dictionary<int, int>[]
		{
			Loc_Strings_HashValueToRowId,
		};


	}
	

	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//                 Custom Editor Data                     
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	#if UNITY_EDITOR
	public static class LocIDsEditorData
	{
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//         Combined Editor Data Builders
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		private static GUIContent[] Combined_EditorLocTableLineOrderedLocStringIDs_Get()
		{
			int i = 0;
			GUIContent[] output = new GUIContent[6];
			output[i++] = new GUIContent("Empty_Loc_String");
			output[i++] = new GUIContent("Confirm_No");
			output[i++] = new GUIContent("Confirm_Yes");
			return output;
		}


		public static readonly GUIContent[] Combined_EditorLocTableLineOrderedLocStringIDs = Combined_EditorLocTableLineOrderedLocStringIDs_Get();


		private static GUIContent[] Combined_EditorAlphabeticallyOrderedLocStringIDs_Get()
		{
			int i = 0;
			GUIContent[] output = new GUIContent[6];
			output[i++] = new GUIContent("Empty_Loc_String");
			output[i++] = new GUIContent("Confirm_No");
			output[i++] = new GUIContent("Confirm_Yes");
			return output;
		}


		public static readonly GUIContent[] Combined_EditorAlphabeticallyOrderedLocStringIDs = Combined_EditorAlphabeticallyOrderedLocStringIDs_Get();


		private static GUIContent[] Combined_EditorCategorisedAlphabeticallyOrderedLocStringIDs_Get()
		{
			int i = 0;
			GUIContent[] output = new GUIContent[6];
			output[i++] = new GUIContent("Empty Loc String");
			output[i++] = new GUIContent("C/Confirm/Confirm No");
			output[i++] = new GUIContent("C/Confirm/Confirm Yes");
			return output;
		}


		public static readonly GUIContent[] Combined_EditorCategorisedAlphabeticallyOrderedLocStringIDs = Combined_EditorCategorisedAlphabeticallyOrderedLocStringIDs_Get();

		private static Dictionary<string, int> Combined_EditorLocStringIdToHashId_Get()
		{
			Dictionary<string, int> output = new Dictionary<string, int>(6);
			output.Add( "Empty_Loc_String", (int)LocIDs.Empty_Loc_String );
			output.Add( "Confirm_No", (int)LocIDs.Confirm_No );
			output.Add( "Confirm_Yes", (int)LocIDs.Confirm_Yes );
			return output;
		}


		public static readonly Dictionary<string, int> Combined_EditorLocStringIdToHashId = Combined_EditorLocStringIdToHashId_Get();


		private static Dictionary<string, int> Combined_EditorCategorisedLocStringIdToHashId_Get()
		{
			Dictionary<string, int> output = new Dictionary<string, int>(6);
			output.Add( "Empty Loc String", (int)LocIDs.Empty_Loc_String );
			output.Add( "C/Confirm/Confirm No", (int)LocIDs.Confirm_No );
			output.Add( "C/Confirm/Confirm Yes", (int)LocIDs.Confirm_Yes );
			return output;
		}


		public static readonly Dictionary<string, int> Combined_EditorCategorisedLocStringIdToHashId = Combined_EditorCategorisedLocStringIdToHashId_Get();


		private enum Combined_EditorHashIdToInspectorPopupIndexOrder
		{
			Empty_Loc_String,
			Confirm_No,
			Confirm_Yes,
			LinkGooglePlay,
			LocalLanguageName,
			UnlinkGooglePlay,
		}


		private static Dictionary<int, int> Combined_EditorHashIdToInspectorPopupIndex_Get()
		{
			Dictionary<int, int> output = new Dictionary<int, int>(6);
			output.Add( (int)LocIDs.Confirm_Yes, (int)Combined_EditorHashIdToInspectorPopupIndexOrder.Confirm_Yes );
			output.Add( (int)LocIDs.Confirm_No, (int)Combined_EditorHashIdToInspectorPopupIndexOrder.Confirm_No );
			output.Add( (int)LocIDs.Empty_Loc_String, (int)Combined_EditorHashIdToInspectorPopupIndexOrder.Empty_Loc_String );
			return output;
		}


		private static int[] Combined_EditorInspectorPopupIndexToHashId_Get()
		{
			int[] output = new int[6];
			output[0] = (int)LocIDs.Empty_Loc_String;
			output[1] = (int)LocIDs.Confirm_No;
			output[2] = (int)LocIDs.Confirm_Yes;
			return output;
		}


		private static Dictionary<int, string> Combined_EditorHashIdToLocStringDropdownCategoryId_Get()
		{
			Dictionary<int, string> output = new Dictionary<int, string>(6);
			output.Add( (int)LocIDs.Confirm_Yes, "C/Confirm/Confirm Yes" );
			output.Add( (int)LocIDs.Confirm_No, "C/Confirm/Confirm No" );
			output.Add( (int)LocIDs.Empty_Loc_String, "Empty Loc String" );
			return output;
		}


		private static Dictionary<int, string> Combined_EditorHashIdToLocStringId_Get()
		{
			Dictionary<int, string> output = new Dictionary<int, string>(6);
			output.Add( (int)LocIDs.Confirm_Yes, "Confirm_Yes" );
			output.Add( (int)LocIDs.Confirm_No, "Confirm_No" );
			output.Add( (int)LocIDs.Empty_Loc_String, "Empty_Loc_String" );
			return output;
		}


		









		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//            Editor Data Readonly Getters                
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		public static readonly int[] Combined_EditorInspectorPopupIndexToHashId = Combined_EditorInspectorPopupIndexToHashId_Get();
		public static readonly Dictionary<int, int> Combined_EditorHashIdToInspectorPopupIndex = Combined_EditorHashIdToInspectorPopupIndex_Get();
		public static readonly Dictionary<int, string> Combined_EditorHashIdToLocStringDropdownCategoryId = Combined_EditorHashIdToLocStringDropdownCategoryId_Get();
		public static readonly Dictionary<int, string> Combined_EditorHashIdToLocStringId = Combined_EditorHashIdToLocStringId_Get();
		


		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//             HashIds To StringsIds Reference            
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		public static readonly Dictionary<int, string>[] EditorHashToStringIdsDictionaryReferences = new Dictionary<int, string>[]
		{
			Combined_EditorHashIdToLocStringId,
		};


		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//             StringsIds To HashIds Reference            
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		public static readonly Dictionary<string, int>[] EditorStringIdsToHashIdsDictionaryReferences = new Dictionary<string, int>[]
		{
			Combined_EditorLocStringIdToHashId,
		};
	}
	#endif
}

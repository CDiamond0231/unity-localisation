//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//             Generate Game Specific Localisation IDs Data
//             Author: Christopher Allport
//             Date Created: 24th June, 2022
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//  Description:
//
//      Uncomment IS_USING_CUSTOM_LOC_IDS if you wish to use custom made 
//      Localisation Data in your own GameSpecificLocData class and then
//      populate the GenerateGameSpecificLocIDsData function.
//
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


//#define IS_USING_CUSTOM_LOC_IDS

using UnityEngine;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using Localisation.Localisation.SharedLocalisationEditor;
using LocData = Localisation.Localisation.SharedLocalisationEditor.GenerationalLocData;


namespace Localisation.GameSpecificLocalisation.Editor
{
	public static partial class GenerateGameSpecificLocalisationIDsData
    {
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // *    Definitions
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        private class Indentation : System.IDisposable
        {
            public Indentation()
            {
                IndentLevel += 1;
            }
            public void Dispose()
            {
                IndentLevel -= 1;
            }
        }

        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // *    Consts
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        public const char LineSeparator = '\n';

        public const string MasterLocTableName = "MasterLocStrings";
        public const string ClassName = "GameSpecificLocIDs";

        public const string EmptyValueIdentity = "Empty_Loc_String";

        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // *    Properties
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        private static int IndentLevel { get; set; } = 0;

        private static string IndentationString { get { return new string('\t', IndentLevel); } }

        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // *    Methods
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        /// <summary> Returns a new formatted line with the Indent Tabs and EndOfLine </summary>
        private static string AddLine(string line, int newLinesCount = 1)
        {
            return $"{IndentationString}{line}{new string(LineSeparator, newLinesCount)}";
        }

        /// <summary> Regenerates (and replaces) the code for GameSpecificLocIDData.cs with new const data. 
        /// This uses Attributes to find Functions in the codebase that will input Game Specific content. </summary>
        /// <returns> Code to write to file </returns>
        public static List<string> GenerateGameSpecificLocIDsData(Dictionary<string, List<GenerationalLocData>> _locDocToLocData)
        {
            List<string> outputStrings = new List<string>();

#if IS_USING_CUSTOM_LOC_IDS
            outputStrings.Add(AddLine($"// This file is autogenerated in the Unity Editor"));
            outputStrings.Add(AddLine($"using System.Collections.Generic;", 2));

            outputStrings.Add(AddLine($"public static partial class {ClassName}"));
            outputStrings.Add(AddLine($"{{"));
            using (new Indentation())
            {
                outputStrings.Add(AddLine($"public static class GameSpecificData"));
                outputStrings.Add(AddLine($"{{"));
                using (new Indentation())
                {
                    // ~~~~~~~~~~~~~~~ Add in Game Specific Loc Stuff here ~~~~~~~~~~~~~~~ //
                }
                outputStrings.Add(AddLine($"}}"));
            }
            outputStrings.Add(AddLine($"}}"));
#endif

            return outputStrings;
        }
    }
}